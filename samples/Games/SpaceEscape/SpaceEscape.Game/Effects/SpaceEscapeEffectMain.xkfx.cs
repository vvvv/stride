// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Xenko Shader Mixin Code Generator.
// To generate it yourself, please install Xenko.VisualStudio.Package .vsix
// and re-save the associated .xkfx.
// </auto-generated>

using System;
using Xenko.Core;
using Xenko.Rendering;
using Xenko.Graphics;
using Xenko.Shaders;
using Xenko.Core.Mathematics;
using Buffer = Xenko.Graphics.Buffer;

namespace SpaceEscape.Effects
{
    [DataContract]public partial class GameParameters : ShaderMixinParameters
    {
        public static readonly PermutationParameterKey<bool> EnableFog = ParameterKeys.NewPermutation<bool>(true);
        public static readonly PermutationParameterKey<bool> EnableBend = ParameterKeys.NewPermutation<bool>(true);
        public static readonly PermutationParameterKey<bool> EnableOnflyTextureUVChange = ParameterKeys.NewPermutation<bool>(false);
    };
    internal static partial class ShaderMixins
    {
        internal partial class SpaceEscapeEffectMain  : IShaderMixinBuilder
        {
            public void Generate(ShaderMixinSource mixin, ShaderMixinContext context)
            {
                context.Mixin(mixin, "XenkoForwardShadingEffect");
                if (context.GetParam(GameParameters.EnableOnflyTextureUVChange))
                    context.Mixin(mixin, "TransformationTextureUV");
                if (context.GetParam(GameParameters.EnableBend))
                    context.Mixin(mixin, "TransformationBendWorld");
                if (context.GetParam(GameParameters.EnableFog))
                    context.Mixin(mixin, "FogEffect");
            }

            [ModuleInitializer]
            internal static void __Initialize__()

            {
                ShaderMixinManager.Register("SpaceEscapeEffectMain", new SpaceEscapeEffectMain());
            }
        }
    }
}
