<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssetCannotDelete" xml:space="preserve">
    <value>Cannot delete asset from path [{0}]</value>
  </data>
  <data name="AssetCannotSave" xml:space="preserve">
    <value>The asset cannot be saved to path [{0}]</value>
  </data>
  <data name="AssetLoadingFailed" xml:space="preserve">
    <value>Failed to load asset from path [{0}]. Reason: {1}</value>
  </data>
  <data name="AssetForPackageNotFound" xml:space="preserve">
    <value>Asset [{0}] not found. Required for package [{1}]</value>
  </data>
  <data name="AssetFoundInDifferentPackage" xml:space="preserve">
    <value>Asset [{0}] was found in package [{1}]. Perhaps a package dependency is missing?</value>
  </data>
  <data name="AssetReferenceChanged" xml:space="preserve">
    <value>The asset reference [{0}] id has changed to a new asset [{1}]</value>
  </data>
  <data name="AssetUpToDate" xml:space="preserve">
    <value>Asset [{0}] already up-to-date</value>
  </data>
  <data name="BaseChanged" xml:space="preserve">
    <value>Original asset not found. A new asset with the same location was found [{0}]</value>
  </data>
  <data name="BaseInvalidType" xml:space="preserve">
    <value>Invalid base type. Base type [{0}] is not of the same type as current asset [{1}]</value>
  </data>
  <data name="BaseNotFound" xml:space="preserve">
    <value>The base of the asset was not found</value>
  </data>
  <data name="BuildProfileCannotBeNull" xml:space="preserve">
    <value>The build profile [{0}] cannot be null</value>
  </data>
  <data name="BuildProfileFileExtensionCannotBeNull" xml:space="preserve">
    <value>The file extension for build profile [{0}] cannot be null</value>
  </data>
  <data name="CompilationCancelled" xml:space="preserve">
    <value>Compilation of asset [{0}] cancelled</value>
  </data>
  <data name="CompilationError" xml:space="preserve">
    <value>Error while compiling asset [{0}]: {1}</value>
  </data>
  <data name="CompilationFailed" xml:space="preserve">
    <value>Asset [{0}] failed to compile</value>
  </data>
  <data name="CompilationFatal" xml:space="preserve">
    <value>Fatal error while compiling asset [{0}]: {1}</value>
  </data>
  <data name="CompilationSucceeded" xml:space="preserve">
    <value>Asset [{0}] successfully compiled</value>
  </data>
  <data name="CompilationWarning" xml:space="preserve">
    <value>Warning while compiling asset [{0}]: {1}</value>
  </data>
  <data name="InternalCompilerError" xml:space="preserve">
    <value>Unexpected internal error while compiling [{0}]</value>
  </data>
  <data name="InvalidCircularReferences" xml:space="preserve">
    <value>Invalid circular references in the asset</value>
  </data>
  <data name="PrerequisiteFailed" xml:space="preserve">
    <value>Asset [{0}] not compiled, prerequisites failed</value>
  </data>
  <data name="PackageCannotSave" xml:space="preserve">
    <value>The package cannot be saved to path [{0}]</value>
  </data>
  <data name="PackageFilePathNotSet" xml:space="preserve">
    <value>Package filepath is not set</value>
  </data>
  <data name="PackageLocationChanged" xml:space="preserve">
    <value>The reference package has been moved to a new location [{0}]. Reference has been updated.</value>
  </data>
  <data name="PackageNotFound" xml:space="preserve">
    <value>Package [{0}] not found</value>
  </data>
  <data name="RawAssetNotFound" xml:space="preserve">
    <value>The raw asset [{0}] was not found on disk</value>
  </data>
  <data name="PackageDependencyModified" xml:space="preserve">
    <value>The package dependency [{0}] is modified to [{1}]</value>
  </data>
  <data name="CompilationMessage" xml:space="preserve">
    <value>{1}</value>
  </data>
  <data name="DefaultSceneNotFound" xml:space="preserve">
    <value>A default scene was not found in the package</value>
  </data>
  <data name="InvalidBasePartInstance" xml:space="preserve">
    <value>Invalid state for the Entity [{0}] referencing the same base instance ({1}). We will apply a fix that can cause a change to this entity and the referencer links. </value>
  </data>
</root>